@startuml Manage Reservation (POST)

header Restaurant Reservation Sequence Diagram
footer Page %page% of %lastpage%
title "Manage Reservation (POST)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:reservations" as routerReservations
participant "<<middleware>>\n:auth" as middlewareAuth
participant "<<controllers>>\n:reservations" as controllersReservations
participant "<<model>>\n:Reservation" as modelReservation
participant "<<model>>\n:Restaurant" as modelRestaurant
participant "<<model>>\n:User" as modelUser
database "<<MongoDB>>\n:reservations" as ReservationsDatabase
database "<<MongoDB>>\n:restaurants" as RestaurantsDatabase
database "<<MongoDB>>\n:users" as UsersDatabase

' POST
client->server ++:req.post('/reservations')
server->routerReservations ++:app.use('/reservations',reservations)
routerReservations -> middlewareAuth ++:protect()
middlewareAuth -> modelUser ++:findById(decodedToken.id)
modelUser -> UsersDatabase ++:UserSchema
UsersDatabase --> modelUser --:user
modelUser --> middlewareAuth --:user
middlewareAuth -> routerReservations --:next()
routerReservations -> middlewareAuth ++:authorize("user")
middlewareAuth -> routerReservations --:next()
routerReservations -> controllersReservations ++:createReservation()

controllersReservations -> modelRestaurant ++:findById(req.body.restaurant)
modelRestaurant -> RestaurantsDatabase ++:RestaurantSchema 
RestaurantsDatabase --> modelRestaurant --:restaurant
controllersReservations <-- modelRestaurant --:restaurant

controllersReservations -> modelReservation ++:find({ restaurant: req.body.restaurant, reserveDate: req.body.reserveDate })
modelReservation -> ReservationsDatabase ++:ReservationSchema 
ReservationsDatabase --> modelReservation --:reservations
controllersReservations <-- modelReservation --:reservations

controllersReservations -> modelReservation ++:create(req.body)
modelReservation -> ReservationsDatabase ++:ReservationSchema 
ReservationsDatabase --> modelReservation --:reservation
controllersReservations <-- modelReservation --:reservation
controllersReservations -> client --:response

@enduml